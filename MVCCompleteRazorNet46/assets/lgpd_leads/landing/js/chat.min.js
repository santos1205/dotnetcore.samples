let sizeScroll = 0, etapa = 0; async function interacaoInicial() { if (0 == etapa) for (let e = 0; e <= 3; e++)await sleep(1e3), interacao("sent", Roteiro[etapa].mensagem, Roteiro[etapa].errorMsg, Roteiro.opcoes), e < 3 && etapa++; else enviaMensagem("sent", "Bem-vindo de volta! <br /> Vamos começar de onde paramos..."), await sleep(1e3), interacao("sent", Roteiro[etapa].mensagem, Roteiro[etapa].errorMsg, Roteiro.opcoes) } async function interacao(e, a, o, s) { let r = ""; if ("" != a) { if ("sent" == e) await sleep(1e3), enviaMensagem(e, a), await RealizarRegrasEtapas(e, a); else { enviaMensagem("replies", a), r = $("#field-chat-msg").val().toLowerCase(), $("#field-chat-msg").val(""), $("#field-chat-msg").focus(); let t = !0; if (t = !s.split(";").includes(r), "" == s && (t = !1), 1 == t) enviaMensagem("sent", o); else { 0 != await RealizarRegrasEtapas(e, a) && interacao("sent", Roteiro[++etapa].mensagem, Roteiro[etapa].errorMsg, Roteiro.opcoes); let o = `${percentualConcluido(etapa).toString().split(".")[0]}% concluído`; $("#sp-chat-concluido").text(o) } } $("#field-chat-msg").val(""), $("#field-chat-msg").focus() } } async function enviaMensagem(e, a) { if ("" == a) return; if (a.includes("E a área jurídica, pertence") && "não" == $("#PossuiJuridico").val()) return void interacao(e, Roteiro[++etapa].mensagem, Roteiro[etapa].errorMsg, Roteiro.opcoes); let o = ""; "sent" == e && (o = "/assets/lgpd_leads/landing/imgs/anna-avatar.png"), "replies" == e && (o = "/assets/lgpd_leads/landing/imgs/user-avatar.png"), "replies" == e && $("#chat-msgs").append(`        \n        <li class="${e}">\n            <img src="${o}" alt="">\n            <p style='font-size: 0.8em;'>${a}</p>\n        </li>\n        <br /><br /><br /><br />\n        `), "sent" == e && $("#chat-msgs").append(`        \n        <li class="${e}">\n            <img src="${o}" alt="">\n            <p style='font-size: 0.8em;'>${a}</p>\n            <br /><br />\n        </li>\n        `); var s = sizeScroll; $(".messages").animate({ scrollTop: s }, 50) } async function RealizarRegrasEtapas(e, a) { if ("sent" == e && ("Quais os departamentos existentes na sua empresa?" == a && (etapa++ , await sleep(1e3), interacao(e, Roteiro[etapa].mensagem, Roteiro[etapa].errorMsg, Roteiro.opcoes)), a.includes("Então a lista de departamentos é essa") && (etapa++ , await sleep(1e3), interacao(e, Roteiro[etapa].mensagem, Roteiro[etapa].errorMsg, Roteiro.opcoes))), "replies" == e) switch (etapa) { case 7: return void ("sim" == a.toLowerCase() && SalvarDeptosMemoriaChat("Administrativo")); case 8: return void ("sim" == a.toLowerCase() && SalvarDeptosMemoriaChat("Tecnologia da Informação")); case 9: return void ("sim" == a.toLowerCase() && SalvarDeptosMemoriaChat("Comercial")); case 10: return void ("sim" == a.toLowerCase() && SalvarDeptosMemoriaChat("Recursos Humanos")); case 11: return void ("sim" == a.toLowerCase() && SalvarDeptosMemoriaChat("Jurídico")); case 12: return void ("sim" == a.toLowerCase() && SalvarDeptosMemoriaChat("Financeiro")); case 13: return void ("sim" == a.toLowerCase() && SalvarDeptosMemoriaChat("Contabilidade")); case 14: return void ("sim" == a.toLowerCase() && SalvarDeptosMemoriaChat("Marketing")); case 15: if ("sim" == a.toLowerCase()) return etapa = 16, await sleep(1e3), interacao("sent", Roteiro[etapa].mensagem, Roteiro[etapa].errorMsg, Roteiro.opcoes), !1; { etapa += 3; let e = "\n                        Então a lista de departamentos é essa: <br />\n                        @lstDeptos                        \n                    ", a = ""; return Deptos.forEach(e => { a += `${e} <br />` }), e = e.replace("@lstDeptos", a), await sleep(1e3), interacao("sent", e, Roteiro[etapa].errorMsg, Roteiro.opcoes), !1 } case 16: return void (a.length > 0 && SalvarDeptosMemoriaChat(a)); case 17: return "sim" == a.toLowerCase() ? (etapa = 16, await sleep(1e3), interacao("sent", Roteiro[etapa].mensagem, Roteiro[etapa].errorMsg, Roteiro.opcoes), !1) : void etapa++; case 19: return "nao" == a.toLowerCase() || "não" == a.toLowerCase() ? (enviaMensagem("sent", "Ok, então vamos começar de novo...."), etapa = 6, Deptos = [], await sleep(1e3), interacao("sent", Roteiro[etapa].mensagem, Roteiro[etapa].errorMsg, Roteiro.opcoes), !1) : void SalvarDeptosChat(Deptos, etapa); case 20: case 21: switch (a.toLowerCase()) { case "própria": case "propria": a = "própria"; break; case "ambos": a = "ambos"; break; case "terceirizado": case "terceirizada": a = "terceirizada" }return void SalvarDadosChat(a, etapa); case 22: return $.isNumeric(a) ? (SalvarDadosChat(a, etapa), void DesativarHash()) : (enviaMensagem("sent", "O valor deve ser numérico, tente novamente."), etapa = 22, await sleep(1e3), interacao("sent", Roteiro[etapa].mensagem, Roteiro[etapa].errorMsg, Roteiro.opcoes), !1); default: SalvarDadosChat(a = "sim" == a.toLowerCase() ? "Sim" : "Não", etapa) } } function percentualConcluido(e) { return e / Roteiro.length * 100 } function SalvarDeptosMemoriaChat(e) { Deptos.push(e) } function CarregarEtapa() { $.ajax({ type: "GET", url: `/LGPD/CarregarEtapa/${$("#Id").val()}`, dataType: "json", cache: !1, async: !0, success: e => { try { e.Ok && (etapa = e.Etapa, interacaoInicial()) } catch{ } try { e.Error && ShowToastrError("Erro!", e.Error, 1e4) } catch{ } } }) } function DesativarHash() { $.ajax({ type: "GET", url: `/LGPD/DesativarHash/${$("#Id").val()}`, dataType: "json", cache: !1, async: !0, success: e => { } }) } function SalvaDepartamentoAvulso(e, a) { if (0 == e.length) return; let o = { Id: $("#Id").val(), Departamento: e, Etapa: a }; $.ajax({ type: "POST", url: "/LGPD/SalvarDeptoAvulsoChat/", data: o, dataType: "html", cache: !1, async: !0, success: e => { } }) } function SalvarDeptosChat(e, a) { if (0 == e.length) return; let o = { Id: $("#Id").val(), Departamentos: e, Etapa: a }; $.ajax({ type: "POST", url: "/LGPD/SalvarDeptosChat/", data: o, dataType: "html", cache: !1, async: !0, success: a => { e.forEach(e => { "Jurídico" != e ? $("#PossuiJuridico").val("não") : $("#PossuiJuridico").val("sim") }) } }) } function SalvarDadosChat(e, a) { $.ajax({ type: "GET", url: `/LGPD/SalvarDadosChat/${$("#Id").val()}?Resposta=${e}&Etapa=${a}`, dataType: "json", cache: !1, async: !0, success: e => { } }) } $(document).ready(() => { $("#btn-enviar").click(() => { sizeScroll += 1e3, interacao("replies", $("#field-chat-msg").val(), Roteiro[etapa].errorMsg, Roteiro[etapa].opcoes) }), $(document).on("keypress", function (e) { 13 == e.which && (sizeScroll += 1e3, interacao("replies", $("#field-chat-msg").val(), Roteiro[etapa].errorMsg, Roteiro[etapa].opcoes)) }), CarregarEtapa() }); const Roteiro = [{ mensagem: ` Olá, ${$("#Nome").val()}. Tudo bem? <br />\n                        Meu nome é Anna, sou sua assistente virtual e estou aqui para bater um papo contigo.\n                    `, opcoes: "", errorMsg: "" }, { mensagem: "\n                    Para entender melhor o contexto da sua empresa em relação à LGPD, preciso te fazer algumas perguntas. Vai ser rapidinho.\n                    ", opcoes: "", errorMsg: "" }, { mensagem: "Vamos lá ...", opcoes: "", errorMsg: "" }, { mensagem: `\n                    A ${$("#Empresa").val()} faz armazenamento de dados dos clientes?\n                    `, opcoes: "sim;não;nao", errorMsg: "desculpe, mas não entendi sua resposta. Responda sim ou não" }, { mensagem: "Sua empresa utiliza serviço de parceiros/terceiros para realizar o processamento/trabalho de dados de seus clientes?", opcoes: "sim;não;nao", errorMsg: "desculpe, mas não entendi sua resposta. Responda sim ou não" }, { mensagem: "Sua empresa já iniciou a adequação da LGPD?", opcoes: "sim;não;nao", errorMsg: "desculpe, mas não entendi sua resposta. Responda sim ou não" }, { mensagem: "Quais os departamentos existentes na sua empresa?", opcoes: "", errorMsg: "" }, { mensagem: "Administrativo?", opcoes: "sim;não;nao", errorMsg: "desculpe, mas não entendi sua resposta. Responda sim ou não" }, { mensagem: "Tecnologia da Informação?", opcoes: "sim;não;nao", errorMsg: "desculpe, mas não entendi sua resposta. Responda sim ou não" }, { mensagem: "Comercial?", opcoes: "sim;não;nao", errorMsg: "desculpe, mas não entendi sua resposta. Responda sim ou não" }, { mensagem: "Recursos Humanos?", opcoes: "sim;não;nao", errorMsg: "desculpe, mas não entendi sua resposta. Responda sim ou não" }, { mensagem: "Jurídico?", opcoes: "sim;não;nao", errorMsg: "desculpe, mas não entendi sua resposta. Responda sim ou não" }, { mensagem: "Financeiro?", opcoes: "sim;não;nao", errorMsg: "desculpe, mas não entendi sua resposta. Responda sim ou não" }, { mensagem: "Contabilidade?", opcoes: "sim;não;nao", errorMsg: "desculpe, mas não entendi sua resposta. Responda sim ou não" }, { mensagem: "Marketing?", opcoes: "sim;não;nao", errorMsg: "desculpe, mas não entendi sua resposta. Responda sim ou não" }, { mensagem: "Existe algum outro departamento que gostaria de mencionar?", opcoes: "sim;não;nao", errorMsg: "desculpe, mas não entendi sua resposta. Responda sim ou não" }, { mensagem: "Qual o nome do departamento?", opcoes: "", errorMsg: "" }, { mensagem: "Certo, tem mais algum departamento que queira adicionar?", opcoes: "sim;não;nao", errorMsg: "desculpe, mas não entendi sua resposta. Responda sim ou não" }, { mensagem: "\n                    Então a lista de departamentos é essa: <br /><br />\n                    Administrativo <br />\n                    Tecnologia da Informação <br />\n                    Comercial <br />\n                    ", opcoes: "sim;não;nao", errorMsg: "desculpe, mas não entendi sua resposta. Responda sim ou não" }, { mensagem: "Podemos prosseguir?", opcoes: "sim;não;nao", errorMsg: "desculpe, mas não entendi sua resposta. Responda sim ou não" }, { mensagem: "A empresa possui área de tecnologia própria, terceirizada ou ambos?", opcoes: "própria;propria;terceirizada;terceirizado;ambos", errorMsg: "desculpe, mas não entendi sua resposta. Responda própria, terceirizada ou ambos" }, { mensagem: "E a área jurídica, pertence a própria empresa é terceirizada ou ambos?", opcoes: "própria;propria;terceirizada;terceirizado;ambos", errorMsg: "desculpe, mas não entendi sua resposta. Responda própria, terceirizada ou ambos" }, { mensagem: "Qual a quantidade de clientes ativos e inativos hoje na empresa?", opcoes: "", errorMsg: "" }, { mensagem: "Ótimo! Finalizamos o perfil da empresa. Falta pouco, agora vamos falar sobre LGPD", opcoes: "", errorMsg: "" }]; var Deptos = []; function sleep(e) { return new Promise(a => setTimeout(a, e)) }