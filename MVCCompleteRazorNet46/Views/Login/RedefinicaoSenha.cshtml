@model QuestionarioCOrg.ViewModels.UsuarioVM

@{
    ViewBag.Title = "Redefinicao Senha";
    Layout = "~/Views/Shared/_Layout_login.cshtml";
}


    <div class="login-container" style="width: 160%;margin-left: -25%;">
        <div class="logo-opportuna">
        </div>
        @if ((bool?)ViewBag.Success == true)
        {
            <h4 style="width: 205%;margin-left: -50%; margin-bottom: 10%">Dentro de Instantes você receberá um e-mail com o link para redefinição da sua senha.</h4>
        }
        else
        {
            <h2>Redefinição de Senha</h2>
        }
        <p>
        </p>

        @if (!string.IsNullOrEmpty(ViewBag.Solicitacao))
        {
            using (Html.BeginForm("SalvarSenha", "Login", FormMethod.Post, new { @class = "m-t" }))
            {
                if ((bool?)ViewBag.Success != true)
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("hdd-redefinicao-form-state", (bool?)ViewBag.Success)
                    @Html.Hidden("hdd-redefinicao-error", (string)ViewBag.Error)

                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.CPF)
                    @Html.HiddenFor(model => model.IdDepartamento)
                    @Html.HiddenFor(model => model.Nome)
                    @Html.HiddenFor(model => model.Email)
                    @Html.HiddenFor(model => model.Telefone)
                    @Html.HiddenFor(model => model.DtNascimento)

                    <div class="form-group">
                        @Html.EditorFor(model => model.Senha, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control",
                                @id = "senha-usuario-redefinicao",
                                @placeHolder = "Informe sua nova senha"
                            }
                        })
                        @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "help-block m-b-none error-mgs", @id = "sp-senha-usuario-error" })
                    </div>
                    <div class="form-group">
                        @Html.EditorFor(model => model.SenhaConfirmacao, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control",
                                @id = "confirmacao-usuario-redefinicao",
                                @placeHolder = "Confirme sua nova senha"
                            }
                        })
                        @Html.ValidationMessageFor(model => model.SenhaConfirmacao, "", new { @class = "help-block m-b-none error-mgs", @id = "sp-senha-confirmacao-usuario-error" })
                    </div>
                    <button type="submit" class="btn btn-primary block full-width m-b">Salvar Senha</button>
                    <p class="text-muted text-center">
                    </p>
                }
                <a class="btn btn-sm btn-white btn-block" href=@Url.Action("Index", "Login")>Login</a>
            }
        }
        else
        {
            using (Html.BeginForm("RedefinicaoSenha", "Login", FormMethod.Post, new { @class = "m-t" }))
            {
                if ((bool?)ViewBag.Success != true)
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("hdd-redefinicao-form-state", (bool?)ViewBag.Success)
                    @Html.Hidden("hdd-redefinicao-error", (string)ViewBag.Error)

                    <div class="form-group">
                        @Html.EditorFor(model => model.Email, new
                        {
                            htmlAttributes = new
                            {
                                @class = "form-control",
                                @id = "email-usuario-signin",
                                @placeHolder = "Informe seu e-mail para receber o link para renovação de senha"
                            }
                        })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "help-block m-b-none error-mgs", @id = "sp-email-signin-error" })
                    </div>
                    <button type="submit" class="btn btn-primary block full-width m-b">Solicitar Redefinição de Senha</button>
                    <p class="text-muted text-center">
                    </p>
                }
                <a class="btn btn-sm btn-white btn-block" href=@Url.Action("Index", "Login")>Login</a>
            }
        }
    </div>

